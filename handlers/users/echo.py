import asyncio
from aiogram import types
from aiogram.dispatcher import FSMContext

from data import config as cfg
from data import text as txt
from handlers.users import lt
from handlers.users import misc as ms
from keyboards import kb, ik
from loader import dp
from payments import aio
from utils.db_api import database as db


@dp.message_handler(state=None)
async def bot_echo(message: types.Message):
    match message.text:
        case "–ü–∞—Ä–µ–Ω—å":
            db.update_ankets(message.from_user.id,"floor","Ô∏è–ü–∞—Ä–µ–Ω—å")
            await message.answer("<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å:</b>",reply_markup=kb.who)

        case "Ô∏è–î–µ–≤—É—à–∫–∞":
            db.update_ankets(message.from_user.id,"floor","–î–µ–≤—É—à–∫–∞")
            await message.answer("<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å:</b>", reply_markup=kb.who)

        case "Ô∏è–ü–∞—Ä–Ω–µ–π":
            db.update_ankets(message.from_user.id,"who","–ü–∞—Ä–Ω–µ–π")
            await message.answer("üìñ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–∞‚úîÔ∏è\n\n"
                                 "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚§µÔ∏è", reply_markup=kb.menu)

        case "–î–µ–≤—É—à–µ–∫":
            db.update_ankets(message.from_user.id, "who", "‚Äç–î–µ–≤—É—à–µ–∫")
            await message.answer("üìñ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–∞‚úîÔ∏è\n\n"
                                 "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚§µÔ∏è", reply_markup=kb.menu)

        case "–õ—é–±–æ–π":
            db.update_ankets(message.from_user.id, "who", "–õ—é–±–æ–π")
            await message.answer("üìñ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–∞‚úîÔ∏è\n\n"
                                 "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚§µÔ∏è", reply_markup=kb.menu)

        #MENU
        case "üë§–ü—Ä–æ—Ñ–∏–ª—å":
            await message.answer_photo(photo=db.get_user_ankets(message.from_user.id)['photo']
                                       ,caption=lt.profile_user(message.from_user.id),reply_markup=ik.keyboard_user)

        case "‚ö°Vip":
            if db.get_user(message.from_user.id)['vip'] == 0:
                data = aio.create_invoice(100)
                await message.answer(txt.buy_vip,reply_markup=ik.pay_mrkp(data))
                await asyncio.sleep(80)
                for i in range(30):
                    if aio.is_payed(data['id']):
                        db.update_userfield(message.from_user.id, "vip", 1)
                        await message.answer(f"<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è VIP!</b>",
                                                  reply_markup=kb.menu)
                        await ms.admin_notify(
                            text=f"‚úÖ<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –æ–ø–∞–ª—Ç–∏–ª VIP.</b>")
                        break
                    await asyncio.sleep(20)
            else:
                await message.answer("–í—ã —É–∂–µ –ø—Ä–µ–æ–±—Ä–µ–ª–∏ VIP, –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!",reply_markup=kb.menu)

        case "‚ú®–õ—É—á—à–∏–µ –ê–Ω–∫–µ—Ç—ã":
            await message.answer(lt.best_profiles(),reply_markup=kb.menu)

        case "üåü–û—Ü–µ–Ω–∏–≤–∞—Ç—å":
            histori = db.get_all_history_ankets(message.from_user.id)['id_ankets']
            data = db.get_user_ankets(message.from_user.id)['who']
            if data == "–ü–∞—Ä–Ω–µ–π":
                man_ankets = db.all_man_ankets()
                print(man_ankets)
            if data == "–î–µ–≤—É—à–µ–∫":
                girls_ankets = db.all_girl_ankets()
                print(girls_ankets)
            if data == "–õ—é–±–æ–π":
                all_ankets = db.all_ankets()
                if all_ankets in histori:
                    print("0")
                else:
                    print(1)